confusionMatrix(mtab)
smp_size <- floor(0.75 * nrow(df))
train_ind <- sample(seq_len(nrow(df)), size = smp_size)
train <- df[train_ind, ]
test <- df[-train_ind, ]
#LDA
#Build the model
model2<-qda(x=train[,-c(8)],grouping = train[,8],data=train,CV= FALSE)
#Summarize the model
summary(model2)
#Predict using the model
test1=test
predseeds= predict(model2,test[,-c(8)])
test1$pred_lda<-predict(model2,test[,-c(8)])$class
#Accuracy of the model
mtab<-table(test1$pred_lda,test[,8])
confusionMatrix(mtab)
smp_size <- floor(0.75 * nrow(df))
train_ind <- sample(seq_len(nrow(df)), size = smp_size)
train <- df[train_ind, ]
test <- df[-train_ind, ]
#LDA
#Build the model
model2<-qda(x=train[,-c(8)],grouping = train[,8],data=train,CV= FALSE)
#Summarize the model
summary(model2)
#Predict using the model
test1=test
predseeds= predict(model2,test[,-c(8)])
test1$pred_lda<-predict(model2,test[,-c(8)])$class
#Accuracy of the model
mtab<-table(test1$pred_lda,test[,8])
confusionMatrix(mtab)
smp_size <- floor(0.75 * nrow(df))
train_ind <- sample(seq_len(nrow(df)), size = smp_size)
train <- df[train_ind, ]
test <- df[-train_ind, ]
#LDA
#Build the model
model2<-qda(x=train[,-c(8)],grouping = train[,8],data=train,CV= FALSE)
#Summarize the model
summary(model2)
#Predict using the model
test1=test
predseeds= predict(model2,test[,-c(8)])
test1$pred_lda<-predict(model2,test[,-c(8)])$class
#Accuracy of the model
mtab<-table(test1$pred_lda,test[,8])
confusionMatrix(mtab)
smp_size <- floor(0.75 * nrow(df))
train_ind <- sample(seq_len(nrow(df)), size = smp_size)
train <- df[train_ind, ]
test <- df[-train_ind, ]
#LDA
#Build the model
model2<-qda(x=train[,-c(8)],grouping = train[,8],data=train,CV= FALSE)
#Summarize the model
summary(model2)
#Predict using the model
test1=test
predseeds= predict(model2,test[,-c(8)])
test1$pred_lda<-predict(model2,test[,-c(8)])$class
#Accuracy of the model
mtab<-table(test1$pred_lda,test[,8])
confusionMatrix(mtab)
smp_size <- floor(0.75 * nrow(df))
train_ind <- sample(seq_len(nrow(df)), size = smp_size)
train <- df[train_ind, ]
test <- df[-train_ind, ]
#LDA
#Build the model
model2<-qda(x=train[,-c(8)],grouping = train[,8],data=train,CV= FALSE)
#Summarize the model
summary(model2)
#Predict using the model
test1=test
predseeds= predict(model2,test[,-c(8)])
test1$pred_lda<-predict(model2,test[,-c(8)])$class
#Accuracy of the model
mtab<-table(test1$pred_lda,test[,8])
confusionMatrix(mtab)
smp_size <- floor(0.75 * nrow(df))
train_ind <- sample(seq_len(nrow(df)), size = smp_size)
train <- df[train_ind, ]
test <- df[-train_ind, ]
#LDA
#Build the model
model2<-qda(x=train[,-c(8)],grouping = train[,8],data=train,CV= FALSE)
#Summarize the model
summary(model2)
#Predict using the model
test1=test
predseeds= predict(model2,test[,-c(8)])
test1$pred_lda<-predict(model2,test[,-c(8)])$class
#Accuracy of the model
mtab<-table(test1$pred_lda,test[,8])
confusionMatrix(mtab)
predseeds
View(predseeds)
seeds
cor(seeds$C,seeds$asymmetry)
cor(seeds$compactness,seeds$asymmetry)
range(seeds$asymmetry)
##Preliminary Analysis (Frank) --- Standardization, Plots...
#summary of the data
summary(seeds)
library(tidyverse)
library(dplyr)
library(rpart)
library(naniar)
library(FactoMineR)
library(fitdistrplus)
library(Hmisc)
library(MASS)
library(rcompanion)
library(lsr)
require(corrr)
library(stats)
library(e1071)
library(GGally)
ggpairs(seeds, aes(colour = Species, alpha = 0.4))
library(caret)
library(missMDA)
library(fastDummies)
library(mice)
library(reshape2)
library(ggplot2)
library(devtools)
#library(ggbiplot)
library(fBasics)
library(corrplot)
library(numbers)
summary(seeds)
ggpairs(seeds, aes(colour = type, alpha = 0.4))
pairs(seeds,col=seeds[,8])
ggpairs(seeds, aes(colour = type, alpha = 0.4))
ggplot(d,aes(x = value,fill= type,colour = type)) +
facet_wrap(~variable,scales = "free_x") +
geom_area(stat = "bin")
ggplot(d,aes(x = value,fill= type,colour = type)) +
facet_wrap(~variable,scales = "free_x") +
geom_freqpoly()
#conditional density estimate
ggplot(d,aes(x = value, fill = type,colour = type)) +
facet_wrap(~variable,scales = "free_x") +
geom_density(alpha = 0.5,position = "fill")
ggplot(d,aes(x = value,fill= type,colour = type)) +
facet_wrap(~variable,scales = "free_x") +
geom_area(stat = "bin")
ggplot(d,aes(x = value,fill= type,colour = type)) +
facet_wrap(~variable,scales = "free_x") +
geom_freqpoly()
ggplot(d,aes(x = value,fill= type,colour = type)) +
facet_wrap(~variable,scales = "free_x") +
geom_area(stat = "bin")
#conditional density estimate
ggplot(d,aes(x = value, fill = type,colour = type)) +
facet_wrap(~variable,scales = "free_x") +
geom_density(alpha = 0.5,position = "fill")
#conditional density estimate
ggplot(d,aes(x = value, fill = type,colour = type)) +
facet_wrap(~variable,scales = "free_x") +
geom_density(alpha = 0.5)
#conditional density estimate
ggplot(d,aes(x = value, fill = type,colour = type)) +
facet_wrap(~variable,scales = "free_x") +
geom_density(alpha = 0.5,adjust= 1/5)
#conditional density estimate
ggplot(d,aes(x = value, fill = type,colour = type)) +
facet_wrap(~variable,scales = "free_x") +
geom_density(alpha = 0.5,position = "fill")
ggplot(d,aes(x = value,fill= type,colour = type)) +
facet_wrap(~variable,scales = "free_x") +
geom_area(stat = "bin")
ggplot(d,aes(x = value,fill= type,colour = type)) +
facet_wrap(~variable,scales = "free_x") +
geom_freqpoly()
ggplot(d,aes(x = value,fill= type,colour = type)) +
facet_wrap(~variable,scales = "free_x") +
geom_freqpoly(alpha=0.5)
ggplot(d,aes(x = value,fill= type,colour = type)) +
facet_wrap(~variable,scales = "free_x") +
geom_freqpoly()
ggplot(data=seeds,mapping = aes(x=type)) +
geom_bar()        # we have the same amount of each type of plant
pairs(seeds,col=seeds[,8])
ggpairs(seeds, aes(colour = type, alpha = 0.4))
ggplot(d,aes(x = value,fill= type,colour = type)) +
facet_wrap(~variable,scales = "free_x") +
geom_area(stat = "bin")
#conditional density estimate
ggplot(d,aes(x = value, fill = type,colour = type)) +
facet_wrap(~variable,scales = "free_x") +
geom_density(alpha = 0.5,position = "fill")
ggplot(data=seeds,mapping = aes(x=type)) +
geom_bar()        # we have the same amount of each type of plant
ggplot(diamonds, aes(depth, fill = cut, colour = cut)) +
facet_wrap(~variable,scales = "free")
geom_density(alpha = 0.1) +
xlim(55, 70)
geom_density(alpha = 0.1)
ggplot(diamonds, aes(depth, fill = cut, colour = cut)) +
facet_wrap(~variable,scales = "free") +
geom_density(alpha = 0.1)
ggplot(d, aes(x = value,fill= type,colour = type) +
ggplot(d, aes(x = value,fill= type,colour = type)) +
facet_wrap(~variable,scales = "free") +
geom_density(alpha = 0.1)
ggplot(d, aes(x = value,fill= type,colour = type)) +
facet_wrap(~variable,scales = "free") +
geom_density(alpha = 0.1)
ggplot(d,aes(x = value,fill= type,colour = type)) +
facet_wrap(~variable,scales = "free_x") +
geom_freqpoly()
ggplot(d, aes(x = value,fill= type,colour = type)) +
facet_wrap(~variable,scales = "free_x") +
geom_density(alpha = 0.1)
ggplot(d, aes(x = value,fill= type,colour = type)) +
facet_wrap(~variable,scales = "free_y") +
geom_density(alpha = 0.1)
ggplot(d, aes(x = value,fill= type,colour = type)) +
facet_wrap(~variable) +
geom_density(alpha = 0.1)
ggplot(d, aes(x = value,fill= type,colour = type)) +
facet_wrap(~variable,scales = "free_x",shrink = TRUE) +
geom_density(alpha = 0.1)
ggplot(d, aes(x = value,fill= type,colour = type)) +
facet_wrap(~variable,scales = "free_x",shrink = TRUE) +
geom_density(alpha = 0.1,stat = bin)
ggplot(d, aes(x = value,fill= type,colour = type)) +
facet_wrap(~variable,scales = "free_x",shrink = TRUE) +
geom_density(alpha = 0.1,stat = "bin")
1
ggplot(d,aes(x = value,fill= type,colour = type)) +
facet_wrap(~variable,scales = "free_x") +
geom_area(stat = "bin")
ggplot(d,aes(x = value,fill= type,colour = type)) +
facet_wrap(~variable,scales = "free_x") +
geom_freqpoly()
ggplot(d, aes(x = value,fill= type,colour = type)) +
facet_wrap(~variable,scales = "free_x",shrink = TRUE) +
geom_density(alpha = 0.1,stat = "bin")
ggplot(d, aes(x = value,fill= type,colour = type)) +
facet_wrap(~variable,scales = "free_x",shrink = TRUE) +
stat_density(alpha = 0.1,stat = ,sm)
ggplot(d, aes(x = value,fill= type,colour = type)) +
facet_wrap(~variable,scales = "free_x",shrink = TRUE) +
stat_density(alpha = 0.1)
ggplot(d, aes(x = value,fill= type,colour = type)) +
facet_wrap(~variable,scales = "free_x",shrink = TRUE) +
stat_density(alpha = 0.1,stat = "bin")
ggplot(d, aes(x = value,fill= type,colour = type)) +
facet_wrap(~variable,scales = "free_x",shrink = TRUE) +
geom_density(alpha = 0.1,stat = "bin")
ggplot(d, aes(x = value,fill= type,colour = type)) +
facet_wrap(~variable,scales = "free_x",shrink = TRUE) +
geom_density(alpha = 0.1,stat = "bin")
ggplot(d,aes(x = value,fill= type,colour = type)) +
facet_wrap(~variable,scales = "free_x") +
geom_area(stat = "bin")
ggplot(d,aes(x = value,fill= type,colour = type)) +
facet_wrap(~variable,scales = "free_x") +
geom_freqpoly()
ggplot(d, aes(x = value,fill= type,colour = type)) +
facet_wrap(~variable,scales = "free_x",shrink = TRUE) +
geom_density(alpha = 0.1,stat = "bin")
ggplot(d, aes(x = value,fill= type,colour = type)) +
facet_wrap(~variable,scales = "free_x",shrink = TRUE) +
geom_density(alpha = 0.3,stat = "bin")
ggplot(d, aes(x = value,fill= type,colour = type)) +
facet_wrap(~variable,scales = "free_x",shrink = TRUE) +
geom_density(alpha = 0.3,stat = "bin",binwidth = 0.1)
ggplot(d, aes(x = value,fill= type,colour = type)) +
facet_wrap(~variable,scales = "free_x",shrink = TRUE) +
geom_density(alpha = 0.3,stat = "bin",binwidth = 0.001)
ggplot(d, aes(x = value,fill= type,colour = type)) +
facet_wrap(~variable,scales = "free_x",shrink = TRUE) +
geom_density(alpha = 0.3,stat = "bin",binwidth = 0.01)
ggplot(d, aes(x = value,fill= type,colour = type)) +
facet_wrap(~variable,scales = "free_x",shrink = TRUE) +
geom_density(alpha = 0.3,stat = "bin",binwidth = 0.1)
ggplot(d, aes(x = value,fill= type,colour = type)) +
facet_wrap(~variable,scales = "free_x",shrink = TRUE) +
geom_density(alpha = 0.3,stat = "bin",binwidth = 1)
ggplot(d, aes(x = value,fill= type,colour = type)) +
facet_wrap(~variable,scales = "free_x",shrink = TRUE) +
geom_density(alpha = 0.3,stat = "bin")
ggplot(d,aes(x = value,fill= type,colour = type)) +
facet_wrap(~variable,scales = "free_x") +
geom_area(stat = "bin")
#conditional density estimate
ggplot(d,aes(x = value, fill = type,colour = type)) +
facet_wrap(~variable,scales = "free_x") +
geom_density(alpha = 0.5,position = "fill")
ggplot(data=seeds,mapping = aes(x=type)) +
geom_bar()        # we have the same amount of each type of plant
pairs(seeds,col=seeds[,8])
ggpairs(seeds, aes(colour = type, alpha = 0.4))
#correlation
df_res = mixed_assoc(seeds)
corMatrix = df_res %>%
ggplot(aes(x,y,fill=assoc))+
geom_tile()+
# geom_text(aes(x,y,label=assoc))+
scale_fill_gradient(low="red", high="yellow")+
theme_classic()
corMatrix
corMatrix = df_res %>%
ggplot(aes(x,y,fill=assoc))+
geom_tile()+
geom_text(aes(x,y,label=round(assoc,digits = 2)))+
scale_fill_gradient(low="red", high="yellow")+
theme_classic()
corMatrix
corMatrix = df_res %>%
ggplot(aes(x,y,fill=assoc))+
geom_tile()+
geom_text(aes(x,y,label=round(assoc,digits = 2)))+
scale_fill_gradient2(low="red",mid = "white" high="yellow")+
theme_classic()
corMatrix = df_res %>%
ggplot(aes(x,y,fill=assoc))+
geom_tile()+
geom_text(aes(x,y,label=round(assoc,digits = 2)))+
scale_fill_gradient2(low="red",mid = "white", high="yellow")+
theme_classic()
corMatrix
corMatrix = df_res %>%
ggplot(aes(x,y,fill=assoc))+
geom_tile()+
geom_text(aes(x,y,label=round(assoc,digits = 2)))+
scale_fill_gradient2(low="red",mid = "white", high="yellow")
# theme_classic()
corMatrix
View(df)
#correlation
df_res = mixed_assoc(seeds)
View(df_res)
corrplot(cor(seeds[1:7]), type = "upper", order = "hclust", tl.col = "black", tl.srt = 45)
seeds %>%
mixed_assoc() %>%
dplyr::select(x, y, assoc) %>%
spread(y, assoc) %>%
column_to_rownames("x") %>%
as.matrix %>%
as_cordf %>%
network_plot()
# theme_classic()
corMatrix
ggcorrplot(df_res)
install.packages("ggcorrplot")
#install.packages("ggcorrplot")
library(ggcorrplot)
ggcorrplot(df_res)
df_res
View(df_res)
corMatrix = df_res %>%
ggplot(aes(x,y,fill=assoc))+
geom_tile()+
geom_text(aes(x,y,label=round(assoc,digits = 2)))+
scale_fill_gradient2(low="red",mid = "white", high="yellow",)
# theme_classic()
corMatrix
View(df_res)
df_res %>%
ggcorrplot(aes(x,y,fill=assoc))
df_res %>%
ggcorrplot(aes(x,y,fill=assoc))
corMatrix = df_res %>%
ggplot(aes(x,y,fill=assoc))+
corMatrix = df_res %>%
ggplot(aes(x,y,fill=assoc))
corMatrix = df_res %>%
ggplot(aes(x,y,fill=assoc))+
geom_tile()
geom_text(aes(x,y,label=round(assoc,digits = 2)))
corMatrix = df_res %>%
ggplot(aes(x,y,fill=assoc))+
geom_tile()+
geom_text(aes(x,y,label=round(assoc,digits = 2)))
# theme_classic()
corMatrix
# theme_classic()
corMatrix
corMatrix = df_res %>%
ggplot(aes(x,y,fill=assoc))+
geom_tile()
# theme_classic()
corMatrix
corMatrix = df_res %>%
ggplot(aes(x,y,fill=assoc))+
geom_tile()+
geom_text(aes(x,y,label=round(assoc,digits = 2)))+
scale_fill_gradient2(low="red",mid = "white", high="yellow",)
View(df_res)
p.mat <- cor_pmat(seeds)
seeds
p.mat <- cor(seeds)
ggcorrplot(cor(seeds[1:7]))
corrplot(cor(seeds[1:7]), type = "upper", order = "hclust", tl.col = "black", tl.srt = 45)
ggcorrplot(cor(seeds[1:7]),method = "circle")
ggcorrplot(cor(seeds[1:7]),method = "square")
ggcorrplot(cor(seeds[1:7]),method = "square",hc.order = TRUE,outline.color = "white")
# theme_classic()
corMatrix
corMatrix = df_res %>%
ggplot(aes(x,y,fill=assoc))+
geom_tile()+
geom_text(aes(x,y,label=round(assoc,digits = 2)))+
scale_fill_gradient(low="red", high="yellow",)
corMatrix = df_res %>%
ggplot(aes(x,y,fill=assoc))+
geom_tile()+
geom_text(aes(x,y,label=round(assoc,digits = 2)))+
scale_fill_gradient(low="red", high="yellow",)
# theme_classic()
corMatrix
ggcorrplot(cor(seeds[1:7]),method = "square",hc.order = TRUE,outline.color = "white")
corrplot(cor(seeds[1:7]), type = "upper", order = "hclust", tl.col = "black", tl.srt = 45)
ggcorrplot(cor(seeds[1:7]),method = "square",hc.order = TRUE,outline.color = "white",lab=TRUE)
ggcorrplot(cor(seeds[1:7]),method = "square",hc.order = TRUE,outline.color = "white",lab=TRUE,insig = "blank")
ggcorrplot(cor(seeds[1:7]),method = "square",hc.order = TRUE,outline.color = "white",lab=TRUE,insig = "blank",type = "upper")
corrplot(cor(seeds[1:7]), type = "upper", order = "hclust", tl.col = "black", tl.srt = 45)
ggcorrplot(cor(seeds[1:7]),method = "square",hc.order = TRUE,outline.color = "white",lab=TRUE,insig = "blank",type = "upper")
corrplot(cor(seeds[1:7]), type = "upper", order = "hclust", tl.col = "black", tl.srt = 45)
ggcorrplot(cor(seeds[1:7]),method = "square",hc.order = TRUE,outline.color = "white",lab=TRUE,insig = "blank",type = "upper")
corrplot(cor(seeds[1:7]), type = "upper", order = "hclust", tl.col = "black", tl.srt = 45)
# theme_classic()
corMatrix
ggcorrplot(cor(seeds[1:7]),method = "square",hc.order = TRUE,outline.color = "white",lab=TRUE,insig = "blank",type = "upper")
ggcorrplot(cor(seeds[1:7]),method = "square",hc.order = TRUE,outline.color = "white",lab=TRUE,insig = "blank",type = "upper",colors = c("blue", "white", "blue"))
ggcorrplot(cor(seeds[1:7]),method = "square",hc.order = TRUE,outline.color = "white",lab=TRUE,insig = "blank",type = "upper",colors = c("red", "white", "red"))
corrplot(cor(seeds[1:7]), type = "upper", order = "hclust", tl.col = "black", tl.srt = 45)
ggcorrplot(cor(seeds[1:7]),method = "square",hc.order = TRUE,outline.color = "white",lab=TRUE,insig = "blank",type = "upper",colors = c("red", "white", "red"))
ggcorrplot(cor(seeds[1:7]),method = "square",hc.order = TRUE,outline.color = "white",lab=TRUE,insig = "blank",type = "upper",colors = c("yellow", "white", "red"))
ggcorrplot(cor(seeds[1:7]),method = "square",hc.order = TRUE,outline.color = "white",lab=TRUE,insig = "blank",type = "upper",ggtheme = ggplot2::theme_gray,colors = c("yellow", "white", "red"))
ggcorrplot(cor(seeds[1:7]),method = "square",hc.order = TRUE,outline.color = "white",lab=TRUE,insig = "blank",type = "upper",ggtheme = ggplot2::theme_gray,colors = c("#6D9EC1", "white", "#E46726"))
ggcorrplot(cor(seeds[1:7]),method = "square",hc.order = TRUE,outline.color = "white",lab=TRUE,insig = "blank",type = "upper",ggtheme = ggplot2::theme_gray,colors = c("blue", "white", "red"))
ggcorrplot(cor(seeds[1:7]),method = "square",hc.order = TRUE,outline.color = "white",lab=TRUE,insig = "blank",type = "upper",ggtheme = theme_bw(),colors = c("blue", "white", "red"))
ggcorrplot(cor(seeds[1:7]),method = "square",hc.order = TRUE,outline.color = "white",lab=TRUE,insig = "blank",type = "upper",ggtheme = theme_void(),colors = c("blue", "white", "red"))
ggcorrplot(cor(seeds[1:7]),method = "square",hc.order = TRUE,outline.color = "white",lab=TRUE,insig = "blank",type = "upper",ggtheme = theme_classic(),colors = c("blue", "white", "red"))
ggcorrplot(cor(seeds[1:7]),method = "square",hc.order = TRUE,outline.color = "white",lab=TRUE,insig = "blank",type = "upper",ggtheme = theme_minimal(),colors = c("blue", "white", "red"))
ggcorrplot(cor(seeds[1:7]),method = "square",hc.order = TRUE,outline.color = "white",lab=TRUE,insig = "blank",type = "upper",ggtheme = theme_grey(),colors = c("blue", "white", "red"))
ggcorrplot(cor(seeds[1:7]),method = "square",hc.order = TRUE,outline.color = "white",lab=TRUE,insig = "blank",type = "upper",colors = c("blue", "white", "red"))
corrplot(cor(seeds[1:7]), type = "upper", order = "hclust", tl.col = "black", tl.srt = 45)
corrplot(cor(seeds[1:7]), type = "upper", order = "hclust", tl.col = "black", tl.srt = 45,lab=TRUE)
corrplot(cor(seeds[1:7]), type = "upper", order = "hclust", tl.col = "black", tl.srt = 45,method = "square")
corrplot(cor(seeds[1:7]), type = "upper", order = "hclust", tl.col = "black", tl.srt = 45,method = "square")
corrplot(cor(seeds[1:7]), type = "upper", order = "hclust", tl.col = "black", tl.srt = 45,method = "square")
corrplot(cor(seeds[1:7]), type = "upper", order = "hclust", tl.col = "black", tl.srt = 45,method = "circle")
ggcorrplot(cor(seeds[1:7]),method = "square",hc.order = TRUE,outline.color = "white",lab=TRUE,insig = "blank",type = "upper",colors = c("blue", "white", "red"))
corrplot(cor(seeds[1:7]), type = "upper", order = "hclust", tl.col = "black", tl.srt = 45,method = "circle")
ggcorrplot(cor(seeds[1:7]),method = "square",hc.order = TRUE,outline.color = "white",lab=TRUE,insig = "blank",type = "upper",colors = c("blue", "white", "red"))
ggcorrplot(cor(seeds[1:7]),method = "square",hc.order = TRUE,outline.color = "white",lab=TRUE,insig = "blank",colors = c("blue", "white", "red"))
# theme_classic()
corMatrix
ggcorrplot(cor(seeds[1:7]),method = "square",hc.order = TRUE,outline.color = "white",lab=TRUE,insig = "blank",colors = c("blue", "white", "red"))
# theme_classic()
corMatrix
theme_classic()
corMatrix
c
corMatrix = df_res %>%
ggplot(aes(x,y,fill=assoc))+
geom_tile()+
geom_text(aes(x,y,label=round(assoc,digits = 2)))+
scale_fill_gradient(low="red", high="yellow",) +
theme_classic()
corMatrix
ggcorrplot(cor(seeds[1:7]),method = "square",hc.order = TRUE,outline.color = "white",lab=TRUE,insig = "blank",colors = c("blue", "white", "red"))
corrplot(cor(seeds[1:7]), type = "upper", order = "hclust", tl.col = "black", tl.srt = 45,method = "circle")
seeds %>%
mixed_assoc() %>%
dplyr::select(x, y, assoc) %>%
spread(y, assoc) %>%
column_to_rownames("x") %>%
as.matrix %>%
as_cordf %>%
network_plot()
ggcorrplot(cor(seeds[1:7]),method = "circle",hc.order = TRUE,outline.color = "white",lab=TRUE,insig = "blank",colors = c("blue", "white", "red"))
ggcorrplot(cor(seeds[1:7]),method = "square",hc.order = TRUE,outline.color = "white",lab=TRUE,insig = "blank",colors = c("blue", "white", "red"))
corMatrix = df_res %>%
ggplot(aes(x,y,fill=assoc))+
geom_tile()+
geom_text(aes(x,y,label=round(assoc,digits = 2)))+
scale_fill_gradient(low="red", high="yellow",) +
theme_classic()
corMatrix
seeds.pca <- prcomp(seeds[,1:7], center = TRUE, scale = TRUE)
summary(seeds.pca)
seeds.pca_df <- as.data.frame(seeds.pca$x[,c(1,2,3)]) #Dataset with only the first 3 principal components
seeds.pca_df$type <- seeds$type
summary(seeds.pca)
summary.PCA(seeds.pca)
##PCA (Pedro)----------------------------------------------------------------------------------
seeds.pca <- prcomp(seeds[,1:7], center = TRUE, scale = TRUE)
summary(seeds.pca)
summary(seeds.pca)
summary.PCA(seeds.pca)
summary.PCA(seeds.pca)
##PCA (Pedro)----------------------------------------------------------------------------------
seeds.pca <- prcomp(seeds[,1:7], center = TRUE, scale = TRUE)
seeds.pca
pairs(seeds,col=seeds[,8])
ggpairs(seeds, aes(colour = type, alpha = 0.4))
ggpairs?
?ggpairs?
help(ggpairs)
help(ggpairs)
ggpairs(seeds, aes(colour = type, alpha = 0.4),axisLabels = "internal")
ggpairs(seeds, aes(colour = type, alpha = 0.4),axisLabels = "show")
ggpairs(seeds, aes(colour = type, alpha = 0.4),axisLabels = "none")
